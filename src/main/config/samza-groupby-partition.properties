# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=samza-groupby

# YARN
yarn.package.path=hdfs://m106:8020/tmp/samza/${project.artifactId}-${pom.version}-dist.tar.gz

# Task
task.class=samza.examples.sql.case2_1.HashPartitionStreamTask
task.inputs=kafka.samza-3cols
task.window.ms=10000
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
# Normally, this would be 3, but we have only one broker.
task.checkpoint.replication.factor=2

# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.byte.class=org.apache.samza.serializers.ByteSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=string
systems.kafka.consumer.zookeeper.connect=m106:2181/kafka
systems.kafka.producer.bootstrap.servers=m106:9092
systems.kafka.samza.reset.offset=true

# Key-value storage
stores.samza-groupby.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
stores.samza-groupby.changelog=kafka.samza-groupby-changelog
stores.samza-groupby.key.serde=byte
stores.samza-groupby.msg.serde=string

# Normally, we'd leave this alone, but we have only one broker.
stores.samza-groupby.changelog.replication.factor=2

# Normally, we'd set this much higher, but we want things to look snappy in the demo.
stores.samza-groupby.write.batch.size=0
stores.samza-groupby.object.cache.size=0

# Job Coordinator
job.coordinator.system=kafka
# Normally, this would be 3, but we have only one broker.
job.coordinator.replication.factor=2
job.systemstreampartition.grouper.factory=org.apache.samza.container.grouper.stream.GroupBySystemStreamPartitionFactory
